
services:
  frontend:
    restart: always
    extends:
      file: frontend/docker/docker-compose.yml
      service: front-nginx
    depends_on:
      - user-management
      - pong-game

  vault-service:
    restart: on-failure:10
    extends:
      file: vault/docker/docker-compose.yml
      service: vault-service

  vault-setting:
    restart: on-failure:10
    extends:
      file: vault/docker/docker-compose.yml
      service: vault-setting
    depends_on:
      - vault-service

  user-db:
    restart: always
    extends:
      file: user_management/docker-compose.yml
      service: user-db

  user-management:
    restart: always
    extends:
      file: user_management/docker-compose.yml
      service: user-management
    depends_on:
      - vault-service
      - user-db

  pong-game:
    restart: always
    extends:
      file: pong_game/docker-compose.yml
      service: pong-game

  redis:
    restart: always
    extends:
      file: pong_game/docker-compose.yml
      service: redis

  mock:
    restart: always
    extends:
      file: mock_communication/docker-compose.yml
      service: mock-communication
    depends_on:
      - user-management
      - pong-game
volumes:
  ssl_volume:
    name: ssl_volume
    driver: local
    driver_opts:
      type: none
      device: ./ssl/cert
      o: bind

  frontend_data:
    name: frontend_data
    driver: local
    driver_opts:
      type: none
      device: ./frontend/files
      o: bind

  vault_data:
    name: vault_data
    driver: local
    driver_opts:
      type: none
      device: ./vault/data
      o: bind
      
  user_pg:
    name: user_pg
    driver: local
    driver_opts:
      type: none
      device: ./user_management/postgres/pgdata
      o: bind
  common:
      name: common
      driver: local
      driver_opts:
        type: none
        device: ./common
        o: bind
networks:
  user-network:
    driver: bridge
